plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenLocal()
    maven { url = "https://jitpack.io" }
    maven { url = "https://www.cursemaven.com" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.blamejared.com" }
    maven { url = 'https://api.modrinth.com/maven' }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
}

fabricApi {
    configureDataGeneration()
}

loom {
    runs {
        server {
            property("fabric.development", "false")
        }
        datagen {
            property("fabric-api.datagen.modid", archives_base_name)
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    // Dependencies
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
    modImplementation "dev.emi:trinkets:${project.trinkets_version}"
    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
    modImplementation "karashokleo.enchantment_infusion:enchantment_infusion:${project.enchantment_infusion_version}"

    // Compat
    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"
    modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"

    modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"
    modLocalRuntime "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    modApi "com.terraformersmc:modmenu:${project.mod_menu_version}"

    modImplementation "curse.maven:jade-324717:${project.jade_version}"

    modImplementation "com.github.ZsoltMolnarrr:TinyConfig:${project.tiny_config_version}"
    modImplementation "maven.modrinth:spell-power:${project.spell_power_version}-fabric"

    modRuntimeOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca_version}"

    modImplementation "maven.modrinth:puzzles-lib:${project.puzzles_lib_version}"
    modImplementation "maven.modrinth:forge-config-api-port:${project.forge_config_api_port}"
    modImplementation "maven.modrinth:mutant-monsters:${project.mutant_monster_version}"

    // Include
    include modImplementation("dev.xkmc.l2serial:L2Serial:${project.l2serial_version}")
    include modImplementation("dev.xkmc.l2tabs:L2Tabs:${project.l2tabs_version}")
    include modImplementation("karashokleo.leobrary:data:${project.leobrary_version}")
    include modImplementation("karashokleo.leobrary:datagen:${project.leobrary_version}")
    include modImplementation("karashokleo.leobrary:damage:${project.leobrary_version}")
    include modImplementation("karashokleo.leobrary:effect:${project.leobrary_version}")
    include modImplementation("karashokleo.leobrary:gui:${project.leobrary_version}")
    include modImplementation("karashokleo.leobrary:compat-patchouli:${project.leobrary_version}")
    include modImplementation("karashokleo.effect_overlay:effect-overlay:${project.effect_overlay_version}")

    include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes}")

    include modImplementation("io.github.fabricators_of_create.Porting-Lib:core:${project.porting_lib_version}")
    include modImplementation("io.github.fabricators_of_create.Porting-Lib:loot:${project.porting_lib_version}")
    include modImplementation("io.github.fabricators_of_create.Porting-Lib:entity:${project.porting_lib_version}")
    include modImplementation("io.github.fabricators_of_create.Porting-Lib:attributes:${project.porting_lib_version}")

    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-chunk:${project.cca_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}